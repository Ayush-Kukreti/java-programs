
-- we should know the idea is here also is to do the reverse of LinkedList.

eg: 1-2-3-4-5-6-7-null K=3
Now we understood the part that we have to reverse in size of k 
3-2-1
6-5-4 (same logic as normal reverse)
7
start: reverse(1-2-3-4-5-6-7) root =3
call 1: 3-2-1-[ reverse(4-5-6-7)]       => 3-2-1-6-5-4-7 return 3
call 2: 6-5-4-[reverse(7)]   => 6-5-4-7 => return 6
call 3: 7 return 7

final ouput: 3-2-1-6-5-4-7

-- Now the problem we will face is how to connect the head that is 1 with the 6 in as per the example.
-- The sol. to resolve the above issues is that we call the recusive method becasue. When we delay the assignment of the next pointer of the current head to the result of the recusive call which will also give me a reversed k-group list then it will be connected correctly.
-- that means we will recusively keeps on doing the reverse and once reversal is done then we will do the attachments/assignment

if(q!=null){
    node.next=reverse(q,k);
}
