
question link: https://leetcode.com/problems/longest-consecutive-sequence/

###########################################

idea: 
-- we need to understand the property of consecutive sequence, which is the difference between numbers will is just 1 greater.

brute force:
If a pick every number in the array, and consider it as the starting point for the consecutive sequence and start finding every 1 element greater than the previous.

Optimization:
Now to the brute force method, if we observe properly whenever an element of the array is consider. 
If we check whether there is an element which is 1 less than it. What we are trying is instead of fiding the CS for every element I will find the CS once for the entire sequence.
example:
[4,10,1,5,2,3]

as per brute force when I take the element 4 I only see an 4,5 that means 2 Length CS(consecutive sequence)
but, if we observe when I will pick the element 3 I will again have to find the consecutive of 3 which will be 4 and then consecutive of 4 which is 5. This means I am revisting the elements again.
Can we optimize that ?

Now in the Optimized idea we first check whether the element we are at is the stating of the CS or not. How can we check this? simply do element -1 if the element exits then we will do the CS from that element because it will give bigger length
if we start with 4 and 3 already exit. then we will wait for the 3 turn because it will have 1 extra in CS than 4. that means we are not supposed to do anything for 4. 

example:
[4,10,1,5,2,3]
start from 4, doing -1, there exits an element 3, skip 4.
start from 10, doing -1, there does not exits 9. then add 1 to 10 and count all consecutive elements.
start from 1, doing -1, there does not exit 0, then add 1 to 1 and count all consecutive elements.
start from 5, doing -1, 4 exits skip
start from 2, doing -1, 1 eixits skip
start from 3, doing -1, 2 exits skip.



